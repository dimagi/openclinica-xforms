install dependencies:

sudo pip install -r pip-requires.txt

other dependencies:

openssl
keytool (packaged with java6)
bouncycastle provider jar
(the above 3 are only needed for ssl cert deployment -- this step can be done offline)


to convert a CRF xml export to xform:

> cd crfconvert
> python crf_to_xform.py [-d] [-t translations.csv] crf.xml

crf.xml will be converted to xform and printed to stdout
use '-' for crf.xml to read from stdin

-d  dump a table of all text strings found in the crf to
    itext_dump.csv, suitable for manual translation

to add additional languages, edit the csv file. add a column for
each new language. set the language code as the column header,
and put the corresponding translation in each row. translations
may be omitted, in which case it will fall back to the default
language. in the future, this is also how you will associate
audio prompts, but that is not supported yet.

-t translations.csv  include the translations from the csv
     file into the xform



to run proxy:

> cd proxy
> python proxy.py [-f xform] [--port port] [--userdb userdata.csv] [--sslcert sslcert.key] openclinica_url

url  root url of openclinica install
     (i.e., https://64.119.157.114:8070/OpenClinica-ws/)
     defaults to 'OPENCLINICA_SERVER' setting in settings file
--port  listen port (default 8053)
--sslcert  path to SSL certificate to use. defaults to 'SSL_CERT' setting in
    settings file, which by default will be a self-signed debugging
    certificate (insecure). '-' will disable https, and the proxy
    will only communicate over http
--userdb  path to a CSV file containing data on the clinic users of the system.
    the csv file should have 3 columns: name (full name), role (physician, frontdesk,
    etc.), and pin (a numeric PIN). leave PIN blank for inactive users. see
    demo_users.csv as an example. if absent, defaults to 'USERS_DB' setting in
    settings file
--dev   enable development mode. insecure configurations require this setting
-f  xform file corresponding to the instances tablet is submitting. defaults
    to 'SOURCE_XFORM' setting in settings file. (note: this setting is not currently
    needed or used for anything)

when proxy boots it will download the necessary WDSLs, then start
servicing requests from the tablet



to configure tablet:

* generate the xform from the most recent CRF
* copy the xform, as well as the static xforms in data/xform/ to
  /sdcard/odk/forms/
* generate an SSL certificate whitelist by running proxy/gen_client_keystore.py;
  copy the resultant 'keystore' file to /sdcard/odk/keystore

on main screen -> menu button -> change preferences:

* set server url to url of proxy (including port)
* set username and password for the OpenClinica user account created for this
  specific device